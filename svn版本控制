1. 简介svn版本控制器？
先引出什么是版本呢？
	例如我们常见的php5.3---5.4版本，不同的版本意味这不同的功能-----在编程的世界里面不同的功能意味着不同版本的代码，所作为开发者的我们就需要把不同版本代码的管理起来。

然后在提几个问题：
	是否有多人协同开发过程序？
	如何管理代码的呢？有遇到过什么问题呢？
	包含私下或者以前做开发？

那么一个人写代码的时候，如何管理，例如现在要查看你一个星期前的代码，该如何办？
解决：可以每天备份一份（费时、费空间）

还有，如果你们是一起开发某个项目，分工做不同的模块，如何最后如何把代码整合在一起进行发布呢？
解决：把代码相互交换，一起整合起来。在整合过程中很容易出现bug。例如看别人的代码没有什么用，进行删除了，出现问题。

还有如果某个项目运行一段时间了，但是现在出现bug了，需要查看是哪个程序员产生的呢？如何追溯是某个人在什么时候开发的呢？


还有，有些核心代码只能查看，不能进行修改，该如何处理？实现权限管理

总结：
1. 备份
2. 通过copy容易产生bug和冲突，对同一个文件修改容易产生冲突
3. 代码管理混乱
4. 一旦出了问题，很难追溯
5. 很难恢复到以前某个正确的版本
6. 无法进行权限控制
7. 项目发布困难（多人整合）
虽然没有经历，但是可能遇到了。


2. 什么是版本控制器？
答：就是维护项目的开发，能够记录文件变化，以便查看特定版本的修订的情况。


3. 主要内容
	svn简介
	svn服务器端和客户端使用
	svn和sublime的整合

最后，我们通过学习，面试主要是想知道是否非常存在团队合作开发的经验。
4. 展示招聘需求

5. 版本控制器的分类
	svn、CVS、git

/**********一节课************/

6. svn简介
	subversion是一个非常流行的版本控制器，是CVS的接替者。

7. 查看一下svn的架构图
	分为三个部分：1. 客户端 2. 服务端 3. 数据的存储

8. svn组件
	svnadmin 管理仓库
	svnserve 服务启动
	svn 客户端

9. 工作流程
	模拟开发流程（并行开发）

10. 简介CVS开发（单线开发），效率低（心里很高兴，表面很痛苦）

11. svn交互流程
	新人第一天上班要做什么呢？

12. svn安装
	visualsvn server manager安装
	设置环境变量
	进行确认--cmd

13. svnadmin仓库建立和启动（命令行操作）
	// 建立仓库（介绍目录结构）
	[root@localhost ~] # svnadmin create test
	// 让服务和参考关联起来
	[root@localhost ~] # svnserve -d -r d:/test

	多仓库和多仓库

14. svn客户端命令使用
	// 检出代码
	[root@localhost ~] # svn checkout svn://localhost/oa .[检出目录或者进入文件目录]
	// 将文件纳入版本控制（只需要执行一次）
	[root@localhost ~] # svn add a.txt
	// 版本提交
	[root@localhost ~] # svn commit -m "add file content" a.txt
	// 会提示没有权限


	dos相关命令
	// 创建文件
	[root@localhost ~] # copy con a.txt (ctrl+z -->enter)
	// 创建目录
	[root@localhost ~] # md test
	// 删除目录
	[root@localhost ~] # rd /s /q test
	// 清屏
	[root@localhost ~] # cls
	// 列出目录信息
	[root@localhost ~] # dir 
	[root@localhost ~] # tree .
	// 进入目录
	[root@localhost ~] # cd /
	// 查看文件内容
	[root@localhost ~] # more a.txt

15. 小乌龟的使用

/**********下午************/

16. 权限设置

17. svn和IDE整合

18. 代码冲突和时光穿梭机和日志查看

19. 标准目录创建

20. 图标简介和代码导出和账号信息清除
